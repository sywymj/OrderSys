@using JSNet.Model;
@model List<StaffEntity>

<link href="/Content/css/lanren.css" rel="stylesheet" />
<script src="/Content/js/jquery.charfirst.pinyin.js"></script>
<script src="/Content/js/sort.js"></script>

<div class="weui_cells_title">请选择</div>

<!-- 代码部分begin -->
<div id="letter"></div>
<div class="sort_box" style="padding-top:20px;">
    @foreach (StaffEntity staff in Model)
{
    <div class="sort_list" id="@staff.ID" StaffID="@staff.ID" StaffName="@staff.Name" onclick="doCheck('#@staff.ID')">
        <div class="num_logo"><img src="/Content/images/avatar_t2.png" /></div>
        <div class="num_name">@staff.Name</div>
    </div>
}
</div>
<div class="initials">
    <ul></ul>
</div>
<div class="weui_btn_area">
    <a class="weui_btn weui_btn_primary" href="javascript:doChooseStaffs();">确定</a>
</div>

<!-- 代码部分end -->
<script>

    //闭包，主要用户交互选择员工，应该放在getallstaff.cshtml，为了保持可复用，加回调函数
    var Staff = function () {
        var staffs = new Array();
        return {
            set: function (objs, callback) {
                debugger;
                $.each(objs, function (i, n) {
                    staffs.push(n);
                })
                debugger;
                //去重
                var ret = [];
                var len = staffs.length;
                for (var i = 0; i < len; i++) {
                    for (var j = i + 1; j < len; j++) {
                        if (staffs[i].ID === staffs[j].ID) {
                            j = ++i;
                        }
                    }
                    ret.push(staffs[i]);
                }
                staffs = ret;

                callback && callback();
            },
            get: function () {
                return staffs;
            },
            remove: function (id, callback) {
                staffs = staffs.filter(function (obj) {
                    return id != obj.ID;
                })
                $("#" + id).removeClass("checked");
                callback && callback();
            }
        }
    }();

    doCheck = function (staffID) {
        $(staffID).addClass("check");
    }

    doChooseStaffs = function () {
        //构建数组对象
        var staffs = new Array();
        $(".sort_list.check").each(function () {
            var staff = new Object();
            $(this).removeClass('check');
            staff.ID = $(this).attr("StaffID");
            staff.Name = $(this).attr("StaffName");
            staffs.push(staff);
        });
        debugger;
        Staff.set(staffs, addHandlerDom);
        closePopup('#staffs_popup');
    }

</script>
