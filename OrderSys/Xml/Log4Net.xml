<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="log4net" type="System.Configuration.IgnoreSectionHandler"/>
  </configSections>
  <log4net>
    <!--定义输出到文件中-->
    <appender name="RollingFileAppender_Error" type="log4net.Appender.RollingFileAppender">
      <!--日志的路径-->
      <param name="File" value="Logs/Errors/" />
      <!--是否覆盖，默认是追加true-->
      <param name="AppendToFile" value="true" />
      <!--按照何种方式产生多个日志文件(日期[Date],文件大小[Size],混合[Composite])-->
      <param name="RollingStyle" value="Composite" />
      <!--文件名称-->
      <param name="DatePattern" value="yyyy-MM-dd'.log'"  />
      <!--最多产生的日志文件数，超过则只保留最新的n个。设定值value="－1"为不限文件数-->
      <param name="MaxSizeRollBackups" value="1000"/>
      <!--每个文件的大小-->
      <param name="MaximumFileSize" value="500KB"/>
      <!--是否只写到一个文件中-->
      <param name="StaticLogFileName" value="false"/>
      <!--记录日志写入文件时，不锁定文本文件，防止多线程时不能写Log,官方说线程非安全-->
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
      <!--过滤设置，LevelRangeFilter为使用的过滤器。 -->
      <filter type="log4net.Filter.LevelRangeFilter">
        <param name="LevelMin" value="ERROR" />
        <param name="LevelMax" value="FATAL" />
      </filter>
      <layout type="log4net.Layout.PatternLayout">
        <!--输出格式-->
        <conversionPattern value="%n【记录时间】%date%n【描述】%message%n"/>
      </layout>
    </appender>
    <!--定义输出到控制台命令行中-->
    <appender name="ConsoleAppender" type="log4net.Appender.ConsoleAppender">
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%n【记录时间】%date%n【描述】%message%n"/>
      </layout>
    </appender>
    <!--定义输出到windows事件中-->
    <appender name="EventLogAppender" type="log4net.Appender.EventLogAppender">
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%n＝＝＝＝＝＝＝＝＝＝
            %n【日志级别】%-5level
            %n【记录时间】%date
            %n【线程编号】[%thread]
            %n【执行时间】[%r]毫秒
            %n【出错文件】%F
            %n【出错行号】%L
            %n【出错的类】%logger 属性[%property{NDC}]
            %n【错误描述】%message
            %n【错误详情】%newline"/>
      </layout>
    </appender>
    <!--定义输出到Trace中-->
    <appender name="TraceAppender" type="log4net.Appender.TraceAppender">
      <layout type="log4net.Layout.PatternLayout">
        <!--<conversionPattern value="%date [%thread] %-5level %logger [%property{NDC}] - %message%newline" />-->
        <conversionPattern value="%n＝＝＝＝＝＝＝＝＝＝
%n【日志级别】%-5level
%n【记录时间】%date
%n【线程编号】[%thread]
%n【执行时间】[%r]毫秒
%n【出错文件】%F
%n【出错行号】%L
%n【出错的类】%logger 属性[%property{NDC}]
%n【错误描述】%message
%n【错误详情】%newline"/>
      </layout>
    </appender>
    <!--定义输出到数据库中（SQLServer）-->
    <appender name="AdoNetAppender_SQLServer" type="log4net.Appender.AdoNetAppender">
      <connectionType value="System.Data.SqlClient.SqlConnection, System.Data, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
      <!--<connectionString value="Provider=Microsoft.Jet.OLEDB.4.0;Data Source=" />-->
      <commandText value="INSERT INTO T_Log ([Date],[Thread],[Level],[Logger],[Success],[Mobiles],[Content],[Exception]) VALUES (@LogDate, @Thread, @LogLevel, @Logger,@Success,@Mobiles,@Content,@Exception)" />
      <bufferSize value="1" />
      <!--定义各个参数-->
      <parameter>
        <parameterName value="@LogDate" />
        <dbType value="String" />
        <size value="240" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%date" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@Thread" />
        <dbType value="String" />
        <size value="240" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%thread" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@LogLevel" />
        <dbType value="String" />
        <size value="240" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%level" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@Logger" />
        <dbType value="String" />
        <size value="240" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%logger" />
        </layout>
      </parameter>
      <!--记录异常ex-->
      <parameter>
        <parameterName value="@Exception" />
        <dbType value="String" />
        <size value="4000" />
        <layout type="log4net.Layout.ExceptionLayout" />
      </parameter>

      <!--自定义属性-->
      <parameter>
        <parameterName value="@Success" />
        <dbType value="String" />
        <size value="50" />
        <layout type="UnitTest.MyLayout, UnitTest">
          <param name="ConversionPattern" value="%property{Success}"/>
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@Mobiles" />
        <dbType value="String" />
        <size value="50" />
        <layout type="UnitTest.MyLayout, UnitTest">
          <param name="ConversionPattern" value="%property{Mobiles}"/>
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@Content" />
        <dbType value="String" />
        <size value="400" />
        <layout type="UnitTest.MyLayout, UnitTest">
          <param name="ConversionPattern" value="%property{Content}"/>
        </layout>
      </parameter>
      <!--过滤设置，LevelRangeFilter为使用的过滤器。 -->
      <filter type="log4net.Filter.LevelRangeFilter">
        <param name="LevelMin" value="INFO" />
        <param name="LevelMax" value="INFO" />
      </filter>

    </appender>
    <!--定义输出到数据库中2（SQLServer）-->
    <appender name="AdoNetAppender_SQLServer2" type="log4net.Appender.AdoNetAppender">
      <connectionType value="System.Data.SqlClient.SqlConnection, System.Data, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
      <!--<connectionString value="Provider=Microsoft.Jet.OLEDB.4.0;Data Source=" />-->
      <commandText value="INSERT INTO T_Log2 ([Date],[Thread],[Level],[Logger],[Exception],[Content]) VALUES (@LogDate, @Thread, @LogLevel, @Logger,@Exception,@Content)" />
      <bufferSize value="1" />
      <!--定义各个参数-->
      <parameter>
        <parameterName value="@LogDate" />
        <dbType value="String" />
        <size value="240" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%date" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@Thread" />
        <dbType value="String" />
        <size value="240" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%thread" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@LogLevel" />
        <dbType value="String" />
        <size value="240" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%level" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@Logger" />
        <dbType value="String" />
        <size value="240" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%logger" />
        </layout>
      </parameter>
      <!--记录异常ex-->
      <parameter>
        <parameterName value="@Exception" />
        <dbType value="String" />
        <size value="4000" />
        <layout type="log4net.Layout.ExceptionLayout" />
      </parameter>

      <!--自定义属性-->
      <parameter>
        <parameterName value="@Content" />
        <dbType value="String" />
        <size value="400" />
        <layout type="UnitTest.MyLayout, UnitTest">
          <param name="ConversionPattern" value="%property{Content}"/>
        </layout>
      </parameter>
      <!--过滤设置，LevelRangeFilter为使用的过滤器。 -->
      <filter type="log4net.Filter.LevelRangeFilter">
        <param name="LevelMin" value="INFO" />
        <param name="LevelMax" value="INFO" />
      </filter>

    </appender>
    <!--定义输出到数据库中（SQLite）-->
    <appender name="AdoNetAppender_SQLite" type="log4net.Appender.AdoNetAppender">
      <bufferSize value="100" />
      <connectionType value="System.Data.SQLite.SQLiteConnection, System.Data.SQLite, Version=1.0.66.0, Culture=neutral" />
      <!--SQLite连接字符串-->
      <!--<connectionString value="Data Source=c:\\log4net.db;Version=3;" />-->
      <commandText value="INSERT INTO Log (Date, Level, Logger,Source, Message) VALUES (@Date, @Level, @Logger, @Source, @Message)" />
      <parameter>
        <parameterName value="@Date" />
        <dbType value="DateTime" />
        <layout type="log4net.Layout.RawTimeStampLayout" />
      </parameter>
      <parameter>
        <parameterName value="@Level" />
        <dbType value="String" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%level" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@Logger" />
        <dbType value="String" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%logger" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@Source" />
        <dbType value="String" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%file:%line" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@Message" />
        <dbType value="String" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%message" />
        </layout>
      </parameter>
    </appender>
    <!--定义输出到数据库中（Oracle）-->
    <appender name="AdoNetAppender_Oracle" type="log4net.Appender.AdoNetAppender">
      <connectionType value="System.Data.OracleClient.OracleConnection, System.Data.OracleClient" />
      <!--<connectionString value="data source=[mydatabase];User ID=[user];Password=[password]" />-->
      <commandText value="INSERT INTO Log (Datetime,Thread,Log_Level,Logger,Message) VALUES (:log_date, :thread, :log_level, :logger, :message)" />
      <bufferSize value="128" />
      <parameter>
        <parameterName value=":log_date" />
        <dbType value="DateTime" />
        <layout type="log4net.Layout.RawTimeStampLayout" />
      </parameter>
      <parameter>
        <parameterName value=":thread" />
        <dbType value="String" />
        <size value="255" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%thread" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value=":log_level" />
        <dbType value="String" />
        <size value="50" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%level" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value=":logger" />
        <dbType value="String" />
        <size value="255" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%logger" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value=":message" />
        <dbType value="String" />
        <size value="4000" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%message" />
        </layout>
      </parameter>
    </appender>


    <!--定义日志的输出媒介。也可以下面的按照一种类型或其他类型输出。root相当于父类-->
    <!--<root>
      日志的级别 OFF > FATAL > ERROR > WARN > INFO > DEBUG > ALL 只有日志输出级别大于或等于配置的级别才能输出日志信息
    </root>-->

    <logger name="SmsSendLog">
      <level value="ALL" />
      <!--数据库形式记录日志-->
      <appender-ref ref="AdoNetAppender_SQLServer"/>
    </logger>

    <logger name="SystemLog">
      <level value="ALL" />
      <!--数据库形式记录日志-->
      <appender-ref ref="AdoNetAppender_SQLServer2"/>
    </logger>
    
    <logger name="ErrorLog">
      <level value="ALL" />
      <!--文件形式记录日志-->
      <appender-ref ref="RollingFileAppender_Error"/>
    </logger>
  </log4net>
</configuration>