@{
    ViewBag.Title = "数据对象管理";
    Layout = "~/Areas/Admin/Views/Shared/_InnerLayout.cshtml";
}

<div class="mini-splitter" style="width:100%;height:100%;">
    <div size="240" showcollapsebutton="true">
        <div class="mini-fit">
            <div id="Target-datagrid" class="mini-datagrid" style="width: 100%; height: 100%;" autoload="true" idfield="ID" autoload="false" showpager="false">
                <div property="columns">
                    <div field="Title" width="120" headeralign="center" allowsort="true">数据表</div>
                </div>
            </div>
        </div>
    </div>
    <div showcollapsebutton="true">
        <div class="mini-fit">
            <div id="ResourceID" class="mini-hidden"></div>
            <div id="Target" class="mini-hidden"></div>
            <div id="Scope-datagrid" class="mini-datagrid" style="width:100%;height:100%;" borderstyle="border:0;" ajaxoptions="{type : 'get'}" autoload="false"
                 url="@Url.Action("GetGrantScopeDT", "Permission", new { area = "Admin" })" idfield="ID" datafield="Data.DT.JSNet" totalfield="Data.Count"
                 multiselect="true" showpager="false">
                <div property="columns">
                    <div type="checkcolumn"></div>
                    <div type="indexcolumn" headeralign="center">序号</div>
                    <div field="Title" width="120" headeralign="center" allowsort="true">数据对象名称</div>
                    <div field="Organize_FullName" width="120" headeralign="center" allowsort="true">所属机构</div>
                    <div field="Organize_Code" width="120" headeralign="center" allowsort="true">机构代码</div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="mini-toolbar" style="text-align:center;padding-top:8px;padding-bottom:8px;" borderstyle="border:0;">
    <a class="mini-button" style="width:60px;" onclick="onOk()">确定</a>
    <span style="display:inline-block;width:25px;"></span>
    <a class="mini-button" style="width:60px;" onclick="onCancel()">取消</a>
</div>


<script type="text/javascript">
    mini.parse();

    var Target_grid = mini.get("Target-datagrid");
    var Scope_grid = mini.get("Scope-datagrid");
    var Scopetype_data = eval('(' + "[{ ID: 'S_OrganizeForDataScope', Title: '机构数据' }, { ID: 'S_RoleForDataScope', Title: '角色数据' }, { ID: 'S_UserForDataScope', Title: '用户数据' }, { ID: 'S_StaffForDataScope', Title: '员工数据' }]" + ')');
    ////////////////////
    //标准方法接口定义
    function SetGridData(data) {
        //跨页面传递的数据对象，克隆后才可以安全使用
        data = mini.clone(data);
        var resourceID = data.ID;
        var target = data.Target;
        mini.get("ResourceID").setValue(resourceID);
        mini.get("Target").setValue(target);
        debugger;
        //选中左侧栏目
        if (target == "") {
            return false;
        } else {
            LoadLeft(target);
        }

        //加载grid数据
        Scope_grid.load({
            ResourceID: resourceID,
            Target: target
        }, function (re) {
            var jdata = ajaxTips(re.text);
            if (jdata.Code == "200") {
                //选中已配置的资源对象
                var url = '@Url.Action("GetGrantedScopeIDs", "Permission", new { area = "Admin" })';
                var parms = {
                    ResourceID: resourceID
                };
                doGetSync(url, parms, function (jdata) {
                    if (jdata.Code == "200") {
                        var data = jdata.Data.split(',');
                        debugger;
                        var rows = Scope_grid.findRows(function (row) {
                            $.each(data, function (i, n) {
                                if (row.ID == n) {
                                    //Todo
                                }
                            });
                            return true;
                        });
                        Scope_grid.setSelected(rows);
                    }
                })
            }
        }, function (re) {
        })
    }


    Target_grid.on("select", function (e) {
        var ResourceID = mini.get("ResourceID").getValue();
        if (e.record) {
            mini.get("Target").setValue(e.record.ID);
            Scope_grid.load({
                ResourceID: ResourceID,
                Target: e.record.ID,
            });
        } else {
            Scope_grid.setData([]);
            Scope_grid.setTotalCount(0);
        }
    });

    //////////////////////////////////
    function LoadLeft(target) {
        Target_grid.setData(Scopetype_data);
        $.each(Scopetype_data, function (i, n) {
            if (n.ID == target) {
                Target_grid.setSelected(n)
            }
        })
    }


    function CloseWindow(action) {
        if (window.CloseOwnerWindow) return window.CloseOwnerWindow(action);
        else window.close();
    }

    function onOk() {
        var ResourceID = mini.get("ResourceID").getValue();
        var Target = mini.get("Target").getValue();

        var rows = staff_grid.getSelecteds();
        var ids = [];
        for (var i = 0, l = rows.length; i < l; i++) {
            var row = rows[i];
            ids.push(row.Organize_ID);
        }
        TargetIDs = ids.join(",");

        var url = "@Url.Action("GrantScope", "Permission", new { area = "Admin" })";
        var data = {
            ResourceID: ResourceID,
            Target: Target,
            TargetIDs: TargetIDs
        };
        doGetSync(url, data, function (jdata) {
        });
    }
    function onCancel() {
        CloseWindow("cancel");
    }
</script>

