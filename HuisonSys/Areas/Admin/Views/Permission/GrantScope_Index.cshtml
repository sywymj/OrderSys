@{
    ViewBag.Title = "资源对象管理";
    Layout = "~/Areas/Admin/Views/Shared/_InnerLayout.cshtml";
}

@RenderPage("~/Areas/Admin/Views/Shared/_Header.cshtml")
<div class="mini-fit">
    <div id="ResourceID" class="mini-hidden"></div>
    <div id="Organize-datagrid" class="mini-treegrid" ajaxoptions="{type : 'get'}" style="width:100%;height:100%" autoload="false"
         url="@Url.Action("GetGrantOrganizeList", "Organize", new { area = "Admin" })" showtreeicon="false" resultastree="false" expandonload="1" multiselect="false" showcheckbox="true" showfoldercheckbox="false"
         treecolumn="treename" idfield="Organize_ID" parentfield="Organize_ParentID" datafield="Data.DT.JSNet">
        <div property="columns">
            <div name="treename" field="Organize_FullName" width="180" headeralign="center" align="left" allowsort="true">标题</div>
            <div field="Organize_Code" width="180" headeralign="center" align="left" allowsort="true">标识码</div>
            <div field="OrganizeCategory_FullName" width="120" headeralign="center" align="center" allowsort="true">机构类别</div>
            <div field="OrganizeCategory_Code" width="120" headeralign="center" align="center" allowsort="true">类别标识码</div>
            <div field="Organize_Description" width="120" headeralign="center" align="center" allowsort="true">机构描述</div>
            <div field="Organize_SortCode" width="120" headeralign="center" align="center" allowsort="true">排序</div>
        </div>
    </div>
</div>
<div class="mini-toolbar" style="text-align:center;padding-top:8px;padding-bottom:8px;" borderstyle="border:0;">
    <a class="mini-button" style="width:60px;" onclick="onOk()">确定</a>
    <span style="display:inline-block;width:25px;"></span>
    <a class="mini-button" style="width:60px;" onclick="onCancel()">取消</a>
</div>


<script>
    mini.parse()
    var Organize_grid = mini.get("Organize-datagrid");

    ////////////////////
    //标准方法接口定义
    function SetGridData(data) {
        //跨页面传递的数据对象，克隆后才可以安全使用
        data = mini.clone(data);
        mini.get("ResourceID").setValue(data.ID);

        Organize_grid.load({
            ResourceCode: data.Code,
            ResourceType: data.ResourceType
        }, function (re) {
            var jdata = ajaxTips(re.text);
            if (jdata.Code == "200") {
                //check已配置的资源对象
                var url = '@Url.Action("GetGrantedScopeIDs", "Permission", new { area = "Admin" })';
                var parms = {
                    resourceID: data.ID
                };
                debugger;
                doGetSync(url, parms, function (jdata) {
                    if (jdata.Code == "200") {
                        Organize_grid.setValue(jdata.Data);
                    }
                })
            }
        }, function (re) {
        })
    }

    //////////////////////////////////
    function CloseWindow(action) {
        if (window.CloseOwnerWindow) return window.CloseOwnerWindow(action);
        else window.close();
    }

    function onOk() {
        var ResourceID = mini.get("ResourceID").getValue();
        var OrganizeIDs;

        var rows = Organize_grid.getCheckedNodes(false);

        var ids = [];
        for (var i = 0, l = rows.length; i < l; i++) {
            var row = rows[i];
            ids.push(row.Organize_ID);
        }
        OrganizeIDs = ids.join(",");

        var url = "@Url.Action("GrantScope", "Permission", new { area = "Admin" })";
        var data = {
            ResourceID: ResourceID,
            OrganizeIDs: OrganizeIDs
        };
        doGetSync(url, data, function (jdata) {
            if (jdata.Code == "200") {
                CloseWindow("save");
            }
        });
    }
    function onCancel() {
        CloseWindow("cancel");
    }



</script>
